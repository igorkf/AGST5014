---
title: "Split-plot Analysis"
author: "Diego Della Lunga, Ashmita Upadhyay, Igor Kuivjogi Fernandes, Timothy Goodhart, Amanda Lay"
date: "05/01/23"
format: beamer
header-includes:
 - \apptocmd{\tightlist}{\setlength{\itemsep}{10pt}}{}{}
institute: University of Arkansas
pdf-engine: xelatex
monofont: LiberationMono
monofontoptions:
  - Scale = 0.7
---

```{r, echo = F}
# chunks configurations
knitr::opts_chunk$set(
  echo = T
  # cache = T
)

# ggplot2 custom theme
theme_custom <- ggthemes::theme_base() + ggplot2::theme(plot.background = ggplot2::element_blank())
ggplot2::theme_set(theme_custom)
```

## Introduction

- Split-plot design (RCBD)
- EDA
- Linear Mixed Model
- Means Comparison

## Factors

:::: {.columns}
::: {.column width="50%"}
### Whole-plot: Irrigation (in $cm^3$ / $cm^3$)
1. moist
2. saturated
3. flooded
:::

::: {.column width="50%"}
### Sub-plot: Fertilizer
1. 0 kg/ha
2. 50 kg/ha
3. 100 kg/ha
4. 150 kg/ha
:::
::::

Response is the rice yield in Mg/ha

## Creating the design
```{r}
sp <- FielDHub::split_plot(
  wp = 3,  # whole-plot
  sp = 4,  # sub-plot
  reps = 3,  # blocks
  type = 2,  # for RCBD
  seed = 2023
)
```

<!-- In the split-plot (RCBD) design, we first randomize the blocks, then we randomize the whole-plot (irrigation) within each block, then we randomize the sub-plot (fertilizer) within each whole-plot. -->

## Field layout
```{r, echo = F}
plot(sp)
```


```{r, echo = F}
split_plot<-sp$fieldBook
split_plot$irrigation<-NA
split_plot$irrigation[split_plot$WHOLE_PLOT==3]<-"flooded"
split_plot$irrigation[split_plot$WHOLE_PLOT==2]<-"saturated"
split_plot$irrigation[split_plot$WHOLE_PLOT==1]<-"moist"
split_plot$irrigation<-factor(split_plot$irrigation, levels=c("moist", "saturated", "flooded"))
split_plot$fertilizer<-NA
split_plot$fertilizer[split_plot$SUB_PLOT==4]<-"0"
split_plot$fertilizer[split_plot$SUB_PLOT==3]<-"50"
split_plot$fertilizer[split_plot$SUB_PLOT==2]<-"100"
split_plot$fertilizer[split_plot$SUB_PLOT==1]<-"150"
split_plot$fertilizer<-factor(split_plot$fertilizer, levels=c("0","50", "100", "150"))
```

<!-- We replaced each value generated by the design by its real factor levels. -->

## Simulating effects of treatments
```{r}
# effect of irrigation
split_plot$y_irr <- NA
split_plot$y_irr[split_plot$irrigation == "flooded"] <- 6
split_plot$y_irr[split_plot$irrigation == "saturated"] <- 12
split_plot$y_irr[split_plot$irrigation == "moist"] <- 15

# effect of fertilizer
split_plot$y_fert <- NA
split_plot$y_fert[split_plot$fertilizer == "0"] <- 5
split_plot$y_fert[split_plot$fertilizer == "50"] <- 8
split_plot$y_fert[split_plot$fertilizer == "100"] <- 10
split_plot$y_fert[split_plot$fertilizer == "150"] <- 12

# effect of interaction
split_plot$y_inter <- (
  split_plot$y_irr * split_plot$y_fert
) * 0.01
```

<!-- We explicitly created effects for both factors and the interaction, but making the interaction -->
<!-- not significant.    -->

## Simulating effects of blocks and error
```{r}
# effect of block
split_plot$y_b <- NA
split_plot$y_b[split_plot$REP == 1] <- -10
split_plot$y_b[split_plot$REP == 2] <- 5
split_plot$y_b[split_plot$REP == 3] <- -5

# effect of error
set.seed(2023)
split_plot$error <- rnorm(36, 0, 2.5)

# creating response
split_plot$y <- (
  split_plot$y_irr + split_plot$y_fert + 
  split_plot$y_inter + split_plot$y_b + split_plot$error
)
```

<!-- We also created effects for the block, and in the end created the response from each effect. -->

```{r, echo = F}
# just putting block as factor
split_plot$block <- as.factor(split_plot$REP)
```

## EDA
```{r}
with(split_plot, table(block))
with(split_plot, table(irrigation))
with(split_plot, table(fertilizer))
```

<!-- Each block appears 12 times, so we have a balanced design. -->
<!-- Each irrigation level is represented 12 times in the experiment, whereas each fertilizer level appears -->
<!-- 9 times.    -->

## EDA
```{r}
with(split_plot, addmargins(table(irrigation, fertilizer)))
```

<!-- In total, we have 36 experimental units. -->

## EDA
```{r}
hist(split_plot$y, main = 'Histogram', xlab = 'yield')
```

<!-- The rice yield is roughly between 0 and 40 Mg/ha. -->

## EDA
```{r}
boxplot(y ~ irrigation, data = split_plot, ylab = 'yield')
```

<!-- The yield decreases as the irrigation increases, i.e., going from moist (lower level) to flooded (higher level).    -->

## EDA
```{r}
boxplot(y ~ fertilizer, data = split_plot, ylab = 'yield')
```

<!-- The yield increases as the amount of fertilizer increases from 0 to 150 kg/ha. -->

## EDA
```{r, fig.asp = 0.6}
with(split_plot, interaction.plot(x.factor = irrigation,
                                  trace.factor = fertilizer,
                                  response = y))
```

<!-- Seems the interaction between irrigation and fertilizer is not present because all lines are almost parallel, so we would expect the interaction to not be significant.    -->

## Model

$$
y_{ijk} = \mu + b_i + \alpha_j + b_i \alpha_j + \beta_k + \alpha_j \beta_k + \varepsilon_{ijk},
$$

where $y_{ijk}$ is the response, $\mu$ is the grand mean, $b_i$ is the block (random), with $i = 1, 2, 3$, $\alpha_j$ is the irrigation term, with $j = 1, 2, 3$, $b_i \alpha_j$ is the interaction between block and irrigation (random), $\beta_k$ is the fertilizer term, with $k = 1, 2, 3, 4$, $\alpha_j \beta_k$ is the interaction between irrigation and block, and $\varepsilon_{ijk}$ is the residual term.   

```{r}
mod.lme <- nlme::lme(y ~ irrigation * fertilizer, 
                     random = ~1|block/irrigation, data = split_plot)
anova(mod.lme)
```

<!-- At a significance level of $\alpha = 0.05$, both treatments irrigation and fertilizer are significant, but the interaction is not -->

```{r, echo = F}
res <- residuals(mod.lme, type = 'pearson')
```


## Model diagnostics
```{r, fig.asp = 0.55}
stripchart(res ~ mod.lme$data$irrigation, vertical = T, pch = 1,
           xlab = 'irrigation', ylab = 'Residuals',
           main = 'Residuals VS Factor levels')
abline(h = 0, lty = 2, col = 'grey')
```

<!-- The residuals seem to have the same variance across the irrigation levels, so the homogeneity of variance is met. -->

## Model diagnostics
```{r, fig.asp = 0.55}
stripchart(res ~ mod.lme$data$fertilizer, vertical = T, pch = 1,
           xlab = 'fertilizer', ylab = 'Residuals',
           main = 'Residuals VS Factor levels')
abline(h = 0, lty = 2, col = 'grey')
```

<!-- The residuals also seem to have the same variance across the fertilizer levels, so the homogeneity of variance is met. -->

## Model diagnostics
```{r, fig.asp = 0.6}
plot(res ~ fitted(mod.lme), main = 'Residuals VS Fitted', 
     xlab = 'Fitted', ylab = 'Residuals')
abline(h = 0, lty = 2, col = 'grey')
```

<!-- There is an horizontal pattern in the residuals vs fitted plot, so the linearity is met. -->

## Model diagnostics
```{r, fig.asp = 0.6}
qqnorm(res, main = 'Normal Q-Q')
qqline(res, lty = 2, col = 'grey')
```

<!-- The points are quite following the QQ-line, so the normality of residuals is present. -->

## Model diagnostics
```{r, fig.asp = 0.6}
plot(res ~ split_plot$ID, main = 'Residuals VS Exp. Units', 
     xlab = 'Experimental Unit', ylab = 'Residuals')
abline(h = 0, lty = 2, col = 'grey')
```

<!-- There is an horizontal pattern in the residuals vs exp. units plots, which means we had proper randomization when creating the design. -->

## Means comparision
```{r, message = F, fig.asp = 0.6}
emm.irr <- emmeans::emmeans(mod.lme, pairwise ~ irrigation, 
                            adjust = "Tukey")
plot(emm.irr, interval = F, comparisons = T)
```

<!-- The moist and flooded levels are significantly different, but saturated is not different from any level. -->

## Means comparisions
```{r, message = F, fig.asp = 0.6}
emm.fert <- emmeans::emmeans(mod.lme, pairwise ~ fertilizer, 
                             adjust = "Tukey")
plot(emm.fert, interval = F, comparisons = T)
```

<!-- The fertilizer level of 0 kg/ha is different from all levels, and level 150 is different from levels 0 and 50, but levels 50 and 100 are not significantly different. -->



